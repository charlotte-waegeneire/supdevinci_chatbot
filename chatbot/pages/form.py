"""Module for the Sup de Vinci application form page."""

import streamlit as st


def _validate_form_data(form_data):
    """Validate form data and return list of errors."""
    errors = []

    required_personal_fields = ["last_name", "first_name", "email", "phone"]
    if not all(form_data.get(field) for field in required_personal_fields):
        errors.append(
            "Veuillez remplir tous les champs d'information personnelle obligatoires"
        )

    if form_data.get("candidate_type") == "S√©lectionnez votre situation":
        errors.append("Veuillez s√©lectionner votre situation")

    if form_data.get("current_level") == "S√©lectionnez votre niveau":
        errors.append("Veuillez s√©lectionner votre niveau d'√©tudes")

    if form_data.get("target_level") == "S√©lectionnez le niveau":
        errors.append("Veuillez s√©lectionner le niveau de formation souhait√©")

    if form_data.get("preferred_campus") == "S√©lectionnez un campus":
        errors.append("Veuillez s√©lectionner un campus")

    if not form_data.get("supdevinci_reason"):
        errors.append("Veuillez expliquer pourquoi Sup de Vinci vous int√©resse")

    if not form_data.get("gdpr_consent"):
        errors.append("Vous devez accepter le traitement de vos donn√©es personnelles")

    return errors


def _display_next_steps(target_level):
    """Display next steps based on target level."""
    st.markdown("### üéØ Prochaines √©tapes :")

    steps_map = {
        "Cycle Pr√©paratoire (1 an)": """
            **Pour le Cycle Pr√©paratoire :**
            1. Examen de votre dossier sous 48h
            2. Tests et entretien de motivation
            3. Coaching pour votre recherche d'alternance (ann√©es 3-5)
        """,
        "Bachelor (BAC+3)": """
            **Pour le Bachelor :**
            1. Analyse de votre dossier par nos √©quipes
            2. Tests techniques selon votre sp√©cialisation
            3. Entretien de motivation personnalis√©
        """,
        "Mast√®re (BAC+5)": """
            **Pour le Mast√®re :**
            1. Examen approfondi de votre parcours
            2. Tests techniques sp√©cialis√©s obligatoires
            3. Entretien projet professionnel
        """,
    }

    if target_level in steps_map:
        st.info(steps_map[target_level])


def _display_application_summary(form_data):
    """Display application summary."""
    with st.expander("üìã R√©sum√© de votre candidature", expanded=False):
        st.write(
            f"**Candidat(e) :** {form_data['first_name']} {form_data['last_name']}"
        )
        st.write(f"**Email :** {form_data['email']}")
        st.write(f"**Formation souhait√©e :** {form_data['target_level']}")
        st.write(f"**Campus :** {form_data['preferred_campus']}")

        if form_data.get("bachelor_specializations"):
            specializations = ", ".join(form_data["bachelor_specializations"])
            st.write(f"**Sp√©cialisations Bachelor :** {specializations}")

        if form_data.get("master_specializations"):
            specializations = ", ".join(form_data["master_specializations"])
            st.write(f"**Sp√©cialisations Mast√®re :** {specializations}")


def _render_personal_info_section():
    """Render personal information section and return collected data."""
    st.subheader("üìã Informations personnelles")

    col1, col2 = st.columns(2)
    with col1:
        last_name = st.text_input("Nom *", placeholder="Votre nom de famille")
        email = st.text_input("Email *", placeholder="votre.email@exemple.com")
        phone = st.text_input("T√©l√©phone *", placeholder="+33 6 12 34 56 78")

    with col2:
        first_name = st.text_input("Pr√©nom *", placeholder="Votre pr√©nom")
        age = st.number_input("√Çge", min_value=16, max_value=50, value=18)
        city = st.text_input("Ville de r√©sidence", placeholder="Votre ville")

    return {
        "last_name": last_name,
        "first_name": first_name,
        "email": email,
        "phone": phone,
        "age": age,
        "city": city,
    }


def _render_profile_section():
    """Render profile section and return collected data."""
    st.subheader("üë§ Votre profil")

    col3, col4 = st.columns(2)
    with col3:
        candidate_type = st.selectbox(
            "Vous √™tes *",
            [
                "S√©lectionnez votre situation",
                "Lyc√©en(ne) - Terminale",
                "√âtudiant(e) - BAC+1",
                "√âtudiant(e) - BAC+2",
                "√âtudiant(e) - BAC+3",
                "Dipl√¥m√©(e) BAC+3",
                "Professionnel en reconversion",
                "Demandeur d'emploi",
                "Autre",
            ],
        )

        current_level = st.selectbox(
            "Niveau d'√©tudes actuel *",
            [
                "S√©lectionnez votre niveau",
                "Terminale",
                "BAC+1",
                "BAC+2",
                "BAC+3",
                "BAC+4",
                "BAC+5 et plus",
            ],
        )

    with col4:
        origin_education = st.text_input(
            "Formation d'origine",
            placeholder="Ex: Bac S, DUT Informatique, BTS SIO...",
        )

        it_experience = st.selectbox(
            "Exp√©rience en informatique",
            [
                "Aucune exp√©rience",
                "Notions de base",
                "Quelques projets personnels",
                "Stage(s) en informatique",
                "Exp√©rience professionnelle",
                "D√©veloppeur amateur",
                "Certifications IT",
            ],
        )

    return {
        "candidate_type": candidate_type,
        "current_level": current_level,
        "origin_education": origin_education,
        "it_experience": it_experience,
    }


def _render_formation_project_section():
    """Render formation project section and return collected data."""
    st.subheader("üéØ Votre projet de formation")

    col5, col6 = st.columns(2)
    with col5:
        target_level = st.selectbox(
            "Niveau de formation souhait√© *",
            [
                "S√©lectionnez le niveau",
                "Bachelor (BAC+3)",
                "Mast√®re (BAC+5)",
            ],
        )
    with col6:
        preferred_campus = st.selectbox(
            "Campus souhait√© *",
            [
                "S√©lectionnez un campus",
                "Paris La D√©fense",
                "Rennes",
                "Bordeaux",
                "Nantes",
                "Indiff√©rent",
            ],
        )

    return {"target_level": target_level, "preferred_campus": preferred_campus}


def _render_specializations_section():
    """Render specializations section and return collected data."""
    st.subheader("üîß Sp√©cialisation(s) qui vous int√©resse(nt)")
    st.write("*Bas√© sur les formations de Sup de Vinci*")

    st.write("**Sp√©cialisations Bachelor :**")
    bachelor_specializations = st.multiselect(
        "Choisissez jusqu'√† 3 sp√©cialisations Bachelor",
        [
            "Syst√®mes, R√©seaux et Cloud",
            "Data",
            "D√©veloppement",
            "Je ne sais pas encore",
        ],
        max_selections=3,
        placeholder="S√©lectionnez",
    )

    st.write("**Sp√©cialisations Mast√®re :**")
    master_specializations = st.multiselect(
        "Choisissez jusqu'√† 3 sp√©cialisations Mast√®re",
        [
            "üñ•Ô∏è D√©veloppement Full Stack",
            "üîß DevOps, Infrastructure & Cloud",
            "üß† Big Data & IA",
            "üõ°Ô∏è Cybers√©curit√©",
            "üéØ Chef de projet IT / Product Owner",
            "Je ne sais pas encore",
        ],
        max_selections=3,
        placeholder="S√©lectionnez",
    )

    return {
        "bachelor_specializations": bachelor_specializations,
        "master_specializations": master_specializations,
    }


def _render_motivations_section():
    """Render motivations section and return collected data."""
    st.subheader("üí≠ Vos motivations")

    col7, col8 = st.columns(2)
    with col7:
        professional_objective = st.selectbox(
            "Votre objectif professionnel principal",
            [
                "Pas encore d√©fini",
                "Trouver un premier emploi dans l'IT",
                "√âvoluer dans mon poste actuel",
                "Changer de secteur d'activit√©",
                "Cr√©er ma propre entreprise",
                "Travailler dans une grande entreprise",
                "Rejoindre une startup",
                "Devenir consultant ind√©pendant",
            ],
        )

    with col8:
        interested_sectors = st.multiselect(
            "Secteurs d'activit√© qui vous int√©ressent",
            [
                "Banque/Finance",
                "E-commerce",
                "Sant√©/M√©dical",
                "Automobile",
                "Jeux vid√©o",
                "Intelligence artificielle",
                "Cybers√©curit√©",
                "Cloud/Infrastructure",
                "Startup/Innovation",
                "Consulting",
                "Secteur public",
                "Pas de pr√©f√©rence",
            ],
            placeholder="S√©lectionnez",
        )

    supdevinci_reason = st.text_area(
        "Pourquoi Sup de Vinci vous int√©resse-t-elle ? *",
        placeholder="Expliquez en quelques lignes ce qui vous attire dans notre √©cole...",
        height=100,
    )

    school_discovery = st.selectbox(
        "Comment avez-vous connu Sup de Vinci ?",
        [
            "Site internet",
            "Salon √©tudiant",
            "Journ√©e portes ouvertes",
            "R√©seaux sociaux",
            "Bouche-√†-oreille",
            "Ancien √©tudiant",
            "Moteur de recherche",
            "Publicit√©",
            "Conseiller d'orientation",
            "Autre",
        ],
        placeholder="S√©lectionnez une option",
    )

    return {
        "professional_objective": professional_objective,
        "interested_sectors": interested_sectors,
        "supdevinci_reason": supdevinci_reason,
        "school_discovery": school_discovery,
    }


def _render_support_section():
    """Render support section and return collected data."""
    st.subheader("üìû Accompagnement souhait√©")

    col9, col10 = st.columns(2)
    with col9:
        info_needs = st.multiselect(
            "Informations souhait√©es",
            [
                "Programme d√©taill√© des formations",
                "Modalit√©s d'admission",
                "Co√ªt de la formation",
                "Aide au financement",
                "Vie √©tudiante",
                "D√©bouch√©s professionnels",
                "Partenariats entreprises",
                "Infrastructures et √©quipements",
            ],
            placeholder="S√©lectionnez",
        )

        urgency = st.selectbox(
            "Urgence de votre demande",
            [
                "Pas d'urgence particuli√®re",
                "J'aimerais √™tre rappel√©(e) rapidement",
                "C'est urgent, je dois me d√©cider vite",
                "Je compare plusieurs √©coles",
            ],
        )

    with col10:
        availability = st.multiselect(
            "Cr√©neaux de disponibilit√© pour un appel",
            [
                "Matin (9h-12h)",
                "Apr√®s-midi (14h-17h)",
                "En soir√©e (18h-20h)",
                "Weekend",
                "Uniquement par email",
            ],
            placeholder="S√©lectionnez",
        )

        specific_questions = st.text_area(
            "Questions sp√©cifiques",
            placeholder="Y a-t-il des points particuliers que vous aimeriez aborder ?",
            height=80,
        )

    return {
        "info_needs": info_needs,
        "urgency": urgency,
        "availability": availability,
        "specific_questions": specific_questions,
    }


def _render_consents_section():
    """Render consents section and return collected data."""
    st.subheader("‚úÖ Consentements")

    newsletter = st.checkbox("Je souhaite recevoir les actualit√©s de Sup de Vinci")
    gdpr_consent = st.checkbox(
        "J'accepte que mes donn√©es soient utilis√©es pour le traitement de ma candidature *"
    )
    partner_contact = st.checkbox(
        "J'accepte d'√™tre contact√©(e) par des entreprises partenaires pour des opportunit√©s"
    )

    return {
        "newsletter": newsletter,
        "gdpr_consent": gdpr_consent,
        "partner_contact": partner_contact,
    }


def _handle_form_submission(form_data):
    """Handle form submission logic."""
    errors = _validate_form_data(form_data)

    if errors:
        st.error("‚ö†Ô∏è Veuillez corriger les erreurs suivantes :")
        for error in errors:
            st.error(f"‚Ä¢ {error}")
        return False

    st.success("‚úÖ Votre candidature a √©t√© envoy√©e avec succ√®s !")

    if "supdevinci_applications" not in st.session_state:
        st.session_state.supdevinci_applications = []

    st.session_state.supdevinci_applications.append(form_data)
    st.balloons()

    with st.container():
        _display_next_steps(form_data["target_level"])
        st.success(
            "üìß Vous recevrez un email de confirmation et nos √©quipes vous contacteront "
            "sous 7 jours maximum."
        )

    _display_application_summary(form_data)
    return True


def show_form():
    """Display the Sup de Vinci application form."""
    st.title("üéì Formulaire de candidature - Sup de Vinci")
    st.write(
        "√âcole d'informatique | Formations du BAC au BAC+5 | "
        "Paris La D√©fense, Rennes, Bordeaux, Nantes"
    )

    st.markdown("""
        ---
        **Vous √™tes int√©ress√©(e) par nos formations en informatique ?**
        Compl√©tez ce formulaire pour que nos √©quipes puissent mieux vous accompagner
        dans votre projet.
        """)

    with st.form("supdevinci_candidature_form"):
        personal_data = _render_personal_info_section()
        profile_data = _render_profile_section()
        formation_data = _render_formation_project_section()
        specializations_data = _render_specializations_section()
        motivations_data = _render_motivations_section()
        support_data = _render_support_section()
        consents_data = _render_consents_section()

        st.divider()
        submitted = st.form_submit_button(
            "üöÄ Envoyer ma candidature", type="primary", use_container_width=True
        )

        if submitted:
            form_data = {
                **personal_data,
                **profile_data,
                **formation_data,
                **specializations_data,
                **motivations_data,
                **support_data,
                **consents_data,
            }
            _handle_form_submission(form_data)

    st.divider()
    st.markdown("""
        ### üìå Informations utiles

        **üè¢ Sup de Vinci en quelques chiffres :**
        - Plus de 25 ans d'exp√©rience
        - Formations du BAC au BAC+5 reconnues par l'√âtat
        - 5 sp√©cialisations m√©tier en Mast√®re
        - Taux d'insertion : 88% √† 100% selon les formations
        - Campus √† Paris La D√©fense, Rennes, Bordeaux et Nantes

        **üìû Contact :**
        - Email : [email protected]
        - T√©l√©phone : 01 41 16 71 83
        - Site web : [www.supdevinci.fr](https://www.supdevinci.fr)
        """)

    if (
        "supdevinci_applications" in st.session_state
        and st.session_state.supdevinci_applications
        and st.checkbox("üîß Mode d√©veloppement - Afficher les candidatures")
    ):
        st.subheader("üìä Candidatures re√ßues")
        for i, application in enumerate(st.session_state.supdevinci_applications):
            candidate_name = f"{application['first_name']} {application['last_name']}"
            with st.expander(
                f"Candidature {i + 1}: {candidate_name} - {application['target_level']}"
            ):
                st.json(application)
